// <auto-generated />
using System;
using Inventory_System.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Inventory_System.Migrations
{
    [DbContext(typeof(InventoryContext))]
    partial class InventoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Inventory_System.Models.BranchOffice", b =>
                {
                    b.Property<int>("BranchOfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("wineryId")
                        .HasColumnType("int");

                    b.HasKey("BranchOfficeId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.HasIndex("wineryId");

                    b.ToTable("BranchOffices");
                });

            modelBuilder.Entity("Inventory_System.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("IVA")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<string>("brand")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("dateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.Property<string>("internalCode")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("presentation")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("price")
                        .HasColumnType("float");

                    b.Property<int>("weight")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Inventory_System.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)");

                    b.Property<string>("name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Inventory_System.Models.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.Property<int?>("wineryId")
                        .HasColumnType("int");

                    b.HasKey("StockId");

                    b.HasIndex("wineryId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Inventory_System.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("phoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Inventory_System.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool>("active")
                        .HasColumnType("bit");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("lastName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte[]>("passwordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("passwordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("phoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("secondName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("sureName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Inventory_System.Models.Winery", b =>
                {
                    b.Property<int>("wineryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("location")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("wineryId");

                    b.ToTable("Winerys");
                });

            modelBuilder.Entity("Inventory_System.Models.BranchOffice", b =>
                {
                    b.HasOne("Inventory_System.Models.User", "User")
                        .WithOne("BranchOffice")
                        .HasForeignKey("Inventory_System.Models.BranchOffice", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventory_System.Models.Winery", "Winery")
                        .WithMany("BranchOffice")
                        .HasForeignKey("wineryId");

                    b.Navigation("User");

                    b.Navigation("Winery");
                });

            modelBuilder.Entity("Inventory_System.Models.Product", b =>
                {
                    b.HasOne("Inventory_System.Models.Stock", "Stock")
                        .WithOne("Product")
                        .HasForeignKey("Inventory_System.Models.Product", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventory_System.Models.Supplier", "Supplier")
                        .WithMany("Product")
                        .HasForeignKey("SupplierId");

                    b.Navigation("Stock");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Inventory_System.Models.Role", b =>
                {
                    b.HasOne("Inventory_System.Models.User", "User")
                        .WithOne("Role")
                        .HasForeignKey("Inventory_System.Models.Role", "RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Inventory_System.Models.Stock", b =>
                {
                    b.HasOne("Inventory_System.Models.Winery", "Winery")
                        .WithMany("Stock")
                        .HasForeignKey("wineryId");

                    b.Navigation("Winery");
                });

            modelBuilder.Entity("Inventory_System.Models.Stock", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("Inventory_System.Models.Supplier", b =>
                {
                    b.Navigation("Product");
                });

            modelBuilder.Entity("Inventory_System.Models.User", b =>
                {
                    b.Navigation("BranchOffice");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Inventory_System.Models.Winery", b =>
                {
                    b.Navigation("BranchOffice");

                    b.Navigation("Stock");
                });
#pragma warning restore 612, 618
        }
    }
}
